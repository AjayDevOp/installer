# Required Python packages:
#
# ansible
# openstacksdk
# netaddr
# openstackclient

- import_playbook: common.yaml

- hosts: all
  gather_facts: no

  tasks:
  - name: 'Create the cluster network'
    os_network:
      name: "{{ os_network }}"

  - name: 'Set the cluster network tag'
    os_tag:
      resource: "network"
      name: "{{ os_network }}"
      tags: "{{ [cluster_id_tag] }}"

  - name: 'Create a subnet'
    os_subnet:
      name: "{{ os_subnet }}"
      network_name: "{{ os_network }}"
      cidr: "{{ os_subnet_range }}"
      allocation_pool_start: "{{ os_subnet_range | next_nth_usable(10) }}"
      allocation_pool_end: "{{ os_subnet_range | ipaddr('last_usable') }}"

  - name: 'Set the cluster subnet tag'
    os_tag:
      resource: "subnet"
      name: "{{ os_subnet }}"
      tags: "{{ [cluster_id_tag] }}"

  - name: 'Create the service network'
    os_network:
      name: "{{ os_svc_network }}"
    when: os_networking_type == "Kuryr"

  - name: 'Set the service network tag'
    os_tag:
      resource: "network"
      name: "{{ os_svc_network }}"
      tags: "{{ [cluster_id_tag] }}"
    when: os_networking_type == "Kuryr"

  - name: 'Create the service subnet'
    os_create_svc_subnet:
      subnet_name: "{{ os_svc_subnet }}"
      network_name: "{{ os_svc_network }}"
      cidr: "{{ svc_subnet_range }}"
      openstack_svc_network: "{{ os_svc_network_range }}"
    when: os_networking_type == "Kuryr"

  - name: 'Set the service subnet tag'
    os_tag:
      resource: "subnet"
      name: "{{ os_svc_subnet }}"
      tags: "{{ [cluster_id_tag] }}"
    when: os_networking_type == "Kuryr"

  - name: 'Create pods subnet pool'
    os_create_subnet_pool:
      name: "{{ subnet_pool }}"
      prefix_lenght: "{{ host_prefix }}"
      prefixes: "{{ cluster_network_cidrs }}"
    when: os_networking_type == "Kuryr"

  - name: 'Set subnet pool tag'
    os_tag:
      resource: "subnet_pool"
      name: "{{ subnet_pool }}"
      tags: "{{ [cluster_id_tag] }}"
    when: os_networking_type == "Kuryr"

  - name: 'Create external router'
    os_router:
      name: "{{ os_router }}"
      network: "{{ os_external_network }}"
      interfaces:
      - "{{ os_subnet }}"

  - name: 'Set external router tag'
    os_tag:
      resource: "router"
      name: "{{ os_router }}"
      tags: "{{ [cluster_id_tag] }}"

  - name: 'Create the API port'
    os_port:
      name: "{{ os_port_api }}"
      network: "{{ os_network }}"
      security_groups:
      - "{{ os_sg_master }}"
      fixed_ips:
      - subnet: "{{ os_subnet }}"
        ip_address: "{{ os_subnet_range | next_nth_usable(5) }}"

  - name: 'Set API port tag'
    os_tag:
      resource: "port"
      name: "{{ os_port_api }}"
      tags: "{{ [cluster_id_tag] }}"

  - name: 'Create the Ingress port'
    os_port:
      name: "{{ os_port_ingress }}"
      network: "{{ os_network }}"
      security_groups:
      - "{{ os_sg_worker }}"
      fixed_ips:
      - subnet: "{{ os_subnet }}"
        ip_address: "{{ os_subnet_range | next_nth_usable(7) }}"

  - name: 'Set the Ingress port tag'
    os_tag:
      resource: "port"
      name: "{{ os_port_ingress }}"
      tags: "{{ [cluster_id_tag] }}"

  # NOTE: openstack ansible module doesn't allow attaching Floating IPs to
  # ports, let's use the CLI instead
  - name: 'Attach the API floating IP to API port'
    command:
      cmd: "openstack floating ip set --port {{ os_port_api }} {{ os_api_fip }}"

  # NOTE: openstack ansible module doesn't allow attaching Floating IPs to
  # ports, let's use the CLI instead
  - name: 'Attach the Ingress floating IP to Ingress port'
    command:
      cmd: "openstack floating ip set --port {{ os_port_ingress }} {{ os_ingress_fip }}"
